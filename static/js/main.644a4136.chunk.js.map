{"version":3,"sources":["images/project.jpg","images/chantal.jpg","images/fredrik.jpeg","images/markus.jpg","images/marcus.png","fonts/spaceship.ttf","components/Button.js","containers/Header.js","components/Card.js","containers/Game.js","containers/Project.js","containers/AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","itemIsSelected","props","itemId","selectedId","handleClick","setSelected","className","this","onClick","text","toUpperCase","Component","Header","Card","title","children","Game","src","frameBorder","allow","allowFullScreen","Project","href","image","alt","AboutUs","chantal","fredrik","marcus","markus","App","id","setState","state","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.644a4136.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/project.101e8173.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chantal.bd03c5be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fredrik.b8160576.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/markus.af5b5858.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marcus.e7ef1e1c.png\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.2b896f0d.ttf\";","import React, { Component } from 'react';\nimport './button.css';\n\nclass Button extends Component {\n\n    itemIsSelected = () => {\n        return this.props.itemId === this.props.selectedId;\n    }\n\n    handleClick = () => {\n        this.props.setSelected(this.props.itemId);\n    }\n\n    render() {\n        return (\n            <div\n                className={'button ' + (this.itemIsSelected() ? 'active' : '')}\n                onClick={this.handleClick}\n            >\n                {this.props.text.toUpperCase()}\n            </div>\n        );\n    }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport './header.css';\nimport Button from '../components/Button';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <div className='headerTitle'>THE CONQUER OF VISULON</div>\n                <div className='headerLinks'>\n                    <Button\n                        text={'The Game'}\n                        itemId={0}\n                        selectedId={this.props.selectedId}\n                        setSelected={this.props.setSelected}\n                    />\n                    <Button\n                        text={'The Project'}\n                        itemId={1}\n                        selectedId={this.props.selectedId}\n                        setSelected={this.props.setSelected}\n                    />\n                    <Button\n                        text={'About Us'}\n                        itemId={2}\n                        selectedId={this.props.selectedId}\n                        setSelected={this.props.setSelected}\n                    />\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './card.css';\n\nclass Card extends Component {\n\n    render() {\n        return (\n            <div className='card'>\n                <div className='cardTitle'>\n                    {this.props.title.toUpperCase()}\n                </div>\n                <div className='cardContent'>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport './game.css';\nimport Card from '../components/Card';\n\nclass Game extends Component {\n\n    render() {\n        return (\n            <Card title='The game'>\n                <div className='gameContent'>\n                    <div className='gameVideoWrapper'>\n                        <iframe\n                            className='gameVideo'\n                            src='https://www.youtube.com/embed/1sPfrghKjT0'\n                            frameBorder='0'\n                            allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n                            allowFullScreen\n                        />\n                    </div>\n                    <div className='gameTextWrapper'>\n                        <div className='gameTextTitle'>{'THE CONQUER OF VISULON'}</div>\n                        <div className='gameText'>\n                            <b>Ziria</b>. A planet of technological marvels. The <b>Zirians</b> loved crafting, tinkering and creating, but the consequences of their actions went unnoticed. A cataclysmic event, <b>The Desolation</b>, commenced the mass extinction of the planet. In a last effort, the <b>Zirians</b> pulled all their resources together to create <b>The City in Space</b>, a new home for their species. Still looking fiercely for ways to satisfy their crafting needs, the <b>Zirians</b> became a race of marauders, travelling from planet to planet to steal their resources, no matter who is in their way. Their <b>City in Space</b> expands, while the rest of the galaxy suffers...\n\n                        </div>\n                        <div className='gameText'>\n                            <b>The Conquer of Visulon</b> is a 3D class based Hack 'n Slash game. Take control of one of several classes, such as the <b>Gun Mage</b>, in your quest to conquer the galaxy for its resources. Level up your character in order to gain new, powerful abilities and combine these abilities with items found on your travels to wreak havoc in the ranks of the enemies. Utilize the resources stolen from the planets you visit by expanding and improving <b>The City in Space</b>, giving you access to mighty items and augmentations!\n                        </div>\n                        <div className='gameText'>\n                            <b>The Conquer of Visulon</b> releases on <i>Steam</i> for <i>Windows</i>, <i>Linux</i> and <i>OS X</i> the <b>First of December 2020</b>.\n                        </div>\n                    </div>\n                </div>\n            </Card >\n        );\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport './project.css';\nimport Card from '../components/Card';\nimport image from '../images/project.jpg';\n\nclass Project extends Component {\n\n    render() {\n        return (\n            <Card title='The project'>\n                <div className='projectContent'>\n                    <div className='projectTextWrapper'>\n                        <div className='projectText'>\n                            This project is part of the <a href='https://www.kth.se/student/kurser/kurs/DH2650/?l=en'>DH2650 Computer Game Design</a> course at the <i>KTH Royal Institute of Technology</i>. During the course of six weeks, <b>The Conquer of Visulon</b> has been developed from nothing more than an idea to a full fledged concept, using knowledge gathered from the industry and active discussions in the class.\n                        </div>\n                        <div className='projectText'>\n                            More specifically, the project included creating a working <b>Game Demo</b>, a <b>Video Trailer</b>, this <b>Website</b>, as well as a <b>Game Design Document (GDD)</b>. All of these things were created by us as a group, and we worked in close contact with each other to make sure everybody was happy with the results.\n                        </div>\n                        <div className='projectText'>\n                            The <b>GDD</b> includes all manners of information regarding the game. Not only is the game concept presented, but things like the development platform and our marketing plan were described and motivated. By writing this document, we learned about all aspects of creating a game, not only the implementing bits.\n                        </div>\n                        <div className='projectText'>\n                            The <b>Game</b> was implemented using <i>Unity</i>. Each group member focused on different parts of the development, resulting in an efficent work flow and several inputs into the game. It was very satisfactory when all the pieces were merged together, and we were able to present a working demo that showcased our game concept!\n                        </div>\n                    </div>\n                    <div className='projectImageWrapper'>\n                        <img className='projectImage' src={image} alt='' />\n                    </div>\n                </div>\n            </Card >\n        );\n    }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport './aboutus.css';\nimport Card from '../components/Card';\nimport chantal from '../images/chantal.jpg';\nimport fredrik from '../images/fredrik.jpeg';\nimport markus from '../images/markus.jpg';\nimport marcus from '../images/marcus.png';\n\nclass AboutUs extends Component {\n    render() {\n        return (\n            <Card title='About us'>\n                <div className='aboutUsContent'>\n                    <div className='aboutUsPerson'>\n                        <img className='aboutUsImage' src={chantal} alt='' />\n                        <div className='aboutUsName'>{'CHANTAL HUNDSCHEID'}</div>\n                        <div className='aboutUsText'>I am a second-year Master student of Human Technology Interaction at the Technical University of Eindhoven, in the Netherlands. Currently, I am studying abroad at KTH. My focus was on designing the different User Interface elements, as well as writing the GDD and managing the project.</div>\n                    </div>\n                    <div className='aboutUsPerson'>\n                        <img className='aboutUsImage' src={fredrik} alt='' />\n                        <div className='aboutUsName'>{'FREDRIK OMSTEDT'}</div>\n                        <div className='aboutUsText'>I am studying my final year of the Computer Science Master's programme at KTH. In this project, my focus has been on designing and implementing the classes. I have also been responsible for maintaining our GitHub, and I have written a lot in the GDD.</div>\n                    </div>\n                    <div className='aboutUsPerson'>\n                        <img className='aboutUsImage' src={marcus} alt='' />\n                        <div className='aboutUsName'>{'MARCUS WERLINDER'}</div>\n                        <div className='aboutUsText'>I am a KTH student doing my last year in my Computer Science Master’s programme. For this project my focus has been finding assets, creating scenes, designing the different scenes for the first level as well as creating an overview selection scene. I have also written a smaller part of the GDD.</div>\n                    </div>\n                    <div className='aboutUsPerson'>\n                        <img className='aboutUsImage' src={markus} alt='' />\n                        <div className='aboutUsName'>{'MARKUS WINROTH'}</div>\n                        <div className='aboutUsText'>I am doing my last year at the Machine Learning Master at KTH. I like to combine my knowledge about AI with my love for games. My contribution to this game has been the enemy design and implementation, as well as writing the GDD.</div>\n                    </div>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default AboutUs;\n","import React from 'react';\nimport './App.css';\nimport Header from './containers/Header';\nimport Game from './containers/Game';\nimport Project from './containers/Project';\nimport AboutUs from './containers/AboutUs';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedId: 0\n        }\n    }\n\n    setSelected = (id) => {\n        this.setState({\n            selectedId: id\n        });\n    }\n\n    render() {\n        return (\n            <div className='wrapper'>\n                <div className='headerWrapper'>\n                    <Header selectedId={this.state.selectedId} setSelected={this.setSelected} />\n                </div>\n                <div className='contentWrapper'>\n                    {this.state.selectedId === 0 &&\n                        <Game />\n                    }\n                    {this.state.selectedId === 1 &&\n                        <Project />\n                    }\n                    {this.state.selectedId === 2 &&\n                        <AboutUs />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts/spaceship.ttf';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}